# Define the logger names which you can use with logging.getLogger()
# See logger_root, logger_app, logger_gunicorn.error, logger_gunicorn.access below.
[loggers]
keys=root, app, gunicorn.error, gunicorn.access

# Each logger can write to any/all of these destinations.
# See handler_console, handler_app_file, handler_error_file, handler_access_file below.
[handlers]
keys=console, app_file, error_file, access_file

# Each logger can use one of these file formats.
# See formatter_generic, formatter_access below.
[formatters]
keys=generic, access

[logger_root]
level=DEBUG
handlers=console

[logger_app]
level=DEBUG
propagate=0
handlers=app_file
qualname=app

[logger_gunicorn.error]
level=INFO
handlers=error_file
propagate=0
qualname=gunicorn.error

[logger_gunicorn.access]
level=INFO
handlers=access_file
propagate=0
qualname=gunicorn.access

# The console handler just writes to stdout (NB not stderr)
[handler_console]
class=StreamHandler
formatter=generic
args=(sys.stdout, )

[handler_app_file]
class=logging.handlers.RotatingFileHandler
formatter=generic
args=('/home/arb/src/cast/ccast-player/ccastplayer.app.log', 'a', 32*1024*1024, 99, 'utf-8')

[handler_error_file]
class=logging.handlers.RotatingFileHandler
formatter=generic
args=('/home/arb/src/cast/ccast-player/ccastplayer.error.log', 'a', 1*1024*1024, 99, 'utf-8')

[handler_access_file]
class=logging.handlers.RotatingFileHandler
formatter=access
args=('/home/arb/src/cast/ccast-player/ccastplayer.access.log', 'a', 1*1024*1024, 99, 'utf-8')

[formatter_generic]
format=%(asctime)s [%(process)d] [%(levelname)s] %(message)s
datefmt=%Y-%m-%d %H:%M:%S
class=logging.Formatter

[formatter_access]
format=%(message)s
class=logging.Formatter
